--5.7 Master Hands-On Mode Monitoring

hmmAlpha = {| enter_safe_state, foot_pedal_pressed, enter_autonomous_mode,
enter_hands_on_mode, system_init, speed, protective_stop, speed_ok,
leave_safe_state, enter_master_commissioning_state, enter_slave_commissioning_state,
leave_slave_commissioning_state |}



HMM_AUTONOMOUS_MODE =
  enter_safe_state -> HMM_SAFE_STATE(AM)
  []
  foot_pedal_pressed.True -> enter_hands_on_mode -> HMM_HANDS_ON_MODE
  []
  speed?_ -> HMM_PAUSE(AM)
  []
  enter_slave_commissioning_state -> HMM_SAFE_STATE(AM)

HMM_HANDS_ON_MODE =
  foot_pedal_pressed.False -> enter_autonomous_mode -> HMM_AUTONOMOUS_MODE
  []
  enter_safe_state -> HMM_SAFE_STATE(HOM)
  []
  speed?_ -> HMM_PAUSE(HOM)
  []
  enter_slave_commissioning_state -> HMM_SAFE_STATE(HOM)

HMM_PAUSE(lastMode) =
  (
    protective_stop -> enter_safe_state -> --enter_autonomous_mode ->
    HMM_SAFE_STATE(lastMode)
    []
    speed_ok -> HMM_NEXT_MODE(lastMode)
  )

HMM_NEXT_MODE(nextMode) =
  (
  if nextMode == HOM then
    HMM_HANDS_ON_MODE
  else if nextMode == AM then
    HMM_AUTONOMOUS_MODE
  else
    SKIP
  )

HMM_SAFE_STATE(lastMode) =
  leave_safe_state -> HMM_NEXT_MODE(lastMode)
  []
  enter_master_commissioning_state -> leave_safe_state -> HMM_NEXT_MODE(lastMode)
  []
  leave_slave_commissioning_state -> HMM_NEXT_MODE(lastMode)

HANDS_ON_MODE_MONITOR =
  system_init -> HMM_AUTONOMOUS_MODE
--Assumption: the operator is not pressing the footpedal when the system is initialised

  assert HANDS_ON_MODE_MONITOR :[deadlock free]
  assert HANDS_ON_MODE_MONITOR :[divergence free]
  assert HANDS_ON_MODE_MONITOR :[deterministic]
